#version 330   // 指定GLSL版本3.3

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 texCoord;
layout(location = 2) in vec3 normal;

out VS_OUT {
	vec3 lightDir;
	vec3 halfDir;
	vec3 worldNormal;
	vec2 texCoord;
} outs;


uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 normalModel;

uniform vec3 eyePos;

void main()
{
	vec3 worldPos = (model * vec4(position, 1.0)).xyz;
	vec3 lightPos = vec3(1,1,-1);

	// 规范化的坐标插值后不一定规范化，所以没必要此时normalize
	outs.worldNormal = (normalModel * vec4(normal, 0.0)).xyz;
	outs.lightDir = lightPos - worldPos;
	outs.halfDir = eyePos - worldPos + outs.lightDir;
	outs.texCoord = texCoord;

    gl_Position = projection * view * model * vec4(position, 1.0f);
}

@

#version 330

in VS_OUT {
	vec3 lightDir;
	vec3 halfDir;
	vec3 worldNormal;
	vec2 texCoord;
} ins;

uniform sampler2D diffuseMap;
uniform sampler2D specularMap;

void main()
{
	float diffFactor = max(0.0, dot(normalize(ins.worldNormal), normalize(ins.lightDir)));
	float specFactor = max(0.0, dot(normalize(ins.worldNormal), normalize(ins.halfDir)));
	specFactor = pow(specFactor, 16);

	gl_FragColor = texture(diffuseMap, ins.texCoord) * diffFactor // diffuse 漫射是物体颜色
				 + texture(specularMap, ins.texCoord) * vec4(1,1,1,1) * specFactor; // specular 高光是光的颜色
}